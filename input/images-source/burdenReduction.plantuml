@startuml
hide footbox
actor "Provider"
box "Clinical System" #LightGreen
  participant EHR
  database "EHR repository"
end box
box "Payer" #LightBlue
  participant "Hooks Service"
  participant "SMART app"
  control converter as "Prior Auth\nconverter"
  database "Rules repository"
  participant processor as "Prior Auth\nprocessor"
end box

== Coverage Requirements Discovery (CRD) ==

note right of EHR #white
  For "what if" scenarios
  EHR is played by SMART app
end note
"Provider" -> "EHR" : Create order/referral/etc.
Activate EHR
  "EHR" -> "Hooks Service" : Is there anything provider should know?
  "Hooks Service" <--> "EHR repository" : Retrieve patient data
  "EHR" <- "Hooks Service" : Yes, e.g.:
  note right of EHR: No coverage requirements; or
  note right of EHR: See __link__ to opiod guidelines; or
  note right of EHR: Want to switch to cheaper/covered drug? ; or
  note right of EHR #aqua
    There are documents to fill out
    Click __here__ to launch SMART app 
  end note
Deactivate EHR
== Documentation, Templates & Rules (DTR) ==
"Provider" -> "EHR": Click 'launch' on SMART App card
Activate "SMART app"
  "EHR" -> "SMART app": Launch SMART app
  "SMART app" -> "Rules repository": Retrieve form/template
  "SMART app" -> "EHR repository": Retrieve data to populate form/template
  "SMART app" <- "Provider": User verifies data & completes form/template
  "SMART app" -> "EHR repository": Store completed form/template
Deactivate "SMART app"
== Prior Authorization Support (PAS) ==
Provider -> EHR: "Request prior auth"
Activate converter
  EHR -> converter: FHIR prior auth request //(with completed form(s) from DTR process)//
  converter -> processor: "X12 (+FHIR) prior auth request\nwith completed form(s)"
  processor -> converter: X12 prior auth response
  converter -> EHR: FHIR prior auth response
Deactivate converter
EHR -> Provider: Display prior auth response
@enduml